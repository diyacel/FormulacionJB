// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecepciónPesosJamesBrown.Helpers;

#nullable disable

namespace RecepciónPesosJamesBrown.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240319143743_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecepciónPesosJamesBrown.Models.DAO.LineaDAO", b =>
                {
                    b.Property<int>("NumOrdenFabricacion")
                        .HasColumnType("int");

                    b.Property<string>("CodArticulo")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NumOrdenFabricacion", "CodArticulo");

                    b.ToTable("Lineas");
                });

            modelBuilder.Entity("RecepciónPesosJamesBrown.Models.DAO.LoteDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Lote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumOrdenFabricacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NumOrdenFabricacion", "CodArticulo");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("RecepciónPesosJamesBrown.Models.DAO.TransferenciaDAO", b =>
                {
                    b.Property<int>("NumOrdenFabricacion")
                        .HasColumnType("int");

                    b.Property<string>("CodArticulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodBodegaDesde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodBodegaHasta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripción")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocNumOF")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NumOrdenFabricacion");

                    b.ToTable("Transferencias");
                });

            modelBuilder.Entity("RecepciónPesosJamesBrown.Models.DAO.LineaDAO", b =>
                {
                    b.HasOne("RecepciónPesosJamesBrown.Models.DAO.TransferenciaDAO", "Transferencia")
                        .WithMany("lineas")
                        .HasForeignKey("NumOrdenFabricacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transferencia");
                });

            modelBuilder.Entity("RecepciónPesosJamesBrown.Models.DAO.LoteDAO", b =>
                {
                    b.HasOne("RecepciónPesosJamesBrown.Models.DAO.LineaDAO", "Linea")
                        .WithMany("Lotes")
                        .HasForeignKey("NumOrdenFabricacion", "CodArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Linea");
                });

            modelBuilder.Entity("RecepciónPesosJamesBrown.Models.DAO.LineaDAO", b =>
                {
                    b.Navigation("Lotes");
                });

            modelBuilder.Entity("RecepciónPesosJamesBrown.Models.DAO.TransferenciaDAO", b =>
                {
                    b.Navigation("lineas");
                });
#pragma warning restore 612, 618
        }
    }
}
